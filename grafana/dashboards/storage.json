{
  "annotations": {
    "list": [
      {
        "builtIn": 1,
        "datasource": {
          "type": "grafana",
          "uid": "-- Grafana --"
        },
        "enable": true,
        "hide": true,
        "iconColor": "rgba(0, 211, 255, 1)",
        "name": "Annotations & Alerts",
        "target": {
          "limit": 100,
          "matchAny": false,
          "tags": [],
          "type": "dashboard"
        },
        "type": "dashboard"
      }
    ]
  },
  "editable": true,
  "fiscalYearStartMonth": 0,
  "graphTooltip": 0,
  "id": 10,
  "links": [],
  "panels": [
    {
      "datasource": {
        "default": true,
        "type": "grafana-postgresql-datasource",
        "uid": "GhzMNppVk"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "fixedColor": "text",
            "mode": "shades"
          },
          "custom": {
            "align": "center",
            "cellOptions": {
              "type": "auto"
            },
            "filterable": true,
            "inspect": false
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green"
              }
            ]
          }
        },
        "overrides": []
      },
      "gridPos": {
        "h": 79,
        "w": 24,
        "x": 0,
        "y": 0
      },
      "id": 2,
      "options": {
        "cellHeight": "sm",
        "footer": {
          "countRows": false,
          "fields": "",
          "reducer": [
            "sum"
          ],
          "show": false
        },
        "showHeader": true
      },
      "pluginVersion": "11.6.0",
      "targets": [
        {
          "datasource": {
            "type": "postgres",
            "uid": "GhzMNppVk"
          },
          "editorMode": "code",
          "format": "table",
          "rawQuery": true,
          "rawSql": "WITH extractor AS (\n  SELECT\n    production ->> 'Name' AS NAME,\n    ROUND(\n      SUM(\n        CASE\n          WHEN production ->> 'Amount' ~ '^\\-?\\d+(\\.\\d+)?$' THEN\n            CASE\n              WHEN production ->> 'Name' IN ('水', '火箭燃料', '电离燃油', '燃料', '液态生物燃料', '涡轮燃油') THEN\n                (production ->> 'Amount') :: NUMERIC / 1000\n              ELSE\n                (production ->> 'Amount') :: NUMERIC\n            END\n          ELSE\n            0\n        END\n      ),\n      0\n    ) AS Amount\n  FROM\n    CACHE CROSS JOIN LATERAL jsonb_array_elements (DATA -> 'production') AS production\n  WHERE\n    metric = 'extractor'\n    AND url = '$server'\n    AND session_name = '$session'\n  GROUP BY\n    1\n),\nfactorypro AS (\n  SELECT\n    production ->> 'Name' AS NAME,\n    ROUND(\n      SUM(\n        CASE\n          WHEN production ->> 'Amount' ~ '^\\-?\\d+(\\.\\d+)?$' THEN\n            CASE\n              WHEN production ->> 'Name' IN ('水', '火箭燃料', '电离燃油', '燃料', '液态生物燃料', '涡轮燃油') THEN\n                (production ->> 'Amount') :: NUMERIC / 1000\n              ELSE\n                (production ->> 'Amount') :: NUMERIC\n            END\n          ELSE\n            0\n        END\n      ),\n      0\n    ) AS Amount\n  FROM\n    CACHE CROSS JOIN LATERAL jsonb_array_elements (DATA -> 'production') AS production\n  WHERE\n    metric = 'factory'\n    AND production ->> 'Name' != 'Unassigned'\n    AND url = '$server'\n    AND session_name = '$session'\n  GROUP BY\n    1\n),\nfactorycons AS (\n  SELECT\n    ingredients ->> 'Name' AS NAME,\n    ROUND(\n      SUM(\n        CASE\n          WHEN ingredients ->> 'Amount' ~ '^\\-?\\d+(\\.\\d+)?$' THEN\n            CASE\n              WHEN ingredients ->> 'Name' IN ('水', '火箭燃料', '电离燃油', '燃料', '液态生物燃料', '涡轮燃油') THEN\n                (ingredients ->> 'Amount') :: NUMERIC / 1000\n              ELSE\n                (ingredients ->> 'Amount') :: NUMERIC\n            END\n          ELSE\n            0\n        END\n      ),\n      0\n    ) AS Amount\n  FROM\n    CACHE CROSS JOIN LATERAL jsonb_array_elements (DATA -> 'ingredients') AS ingredients\n  WHERE\n    metric = 'factory'\n    AND ingredients ->> 'Name' != 'Unassigned'\n    AND url = '$server'\n    AND session_name = '$session'\n  GROUP BY\n    1\n),\nworldInv AS (\n  SELECT DATA\n    ->> 'Name' AS NAME,\n    CASE\n      WHEN DATA ->> 'Amount' ~ '^\\-?\\d+(\\.\\d+)?$' THEN\n        (DATA ->> 'Amount') :: NUMERIC\n      ELSE\n        0\n    END AS Amount\n  FROM\n    CACHE\n  WHERE\n    metric = 'worldInv'\n    AND url = '$server'\n    AND session_name = '$session'\n),\nplayInv AS (\n  SELECT\n    inv.item ->> 'Name' AS NAME,\n    (inv.item ->> 'Amount') :: NUMERIC AS Amount -- 转换为数值类型\n  FROM\n    CACHE CROSS JOIN LATERAL jsonb_array_elements (DATA -> 'Inventory') AS inv (item) -- 正确展开 JSON 数组\n  WHERE\n    metric = 'player'\n    AND url = '$server'\n    AND session_name = '$session'\n),\nCurrentPotential AS (\n  SELECT\n    fi.item ->> 'Name' AS NAME,\n    SUM(\n      ROUND(\n        CASE\n          WHEN fi.item ->> 'Name' IN ('水', '火箭燃料', '电离燃油', '燃料', '液态生物燃料', '涡轮燃油') THEN\n            (fi.item ->> 'Amount') :: NUMERIC / 1000\n          ELSE\n            (fi.item ->> 'Amount') :: NUMERIC\n        END, -- 保持 NUMERIC 类型\n        0\n      )\n    ) AS Amount\n  FROM\n    CACHE CROSS JOIN LATERAL jsonb_array_elements (DATA -> 'FuelInventory') AS fi (item)\n  WHERE\n    metric = 'generators'\n    AND fi.item ->> 'Name' IS NOT NULL\n    AND url = '$server'\n    AND session_name = '$session'\n  GROUP BY\n    1\n),\ncloInv AS (\n  SELECT DATA\n    ->> 'Name' AS NAME,\n    (DATA ->> 'Amount') :: NUMERIC AS Amount -- 转换为数值类型\n  FROM\n    CACHE\n  WHERE\n    metric = 'cloudInv'\n    AND url = '$server'\n    AND session_name = '$session'\n) SELECT COALESCE\n  (\n    P.NAME,\n    C.NAME,\n    e.NAME,\n    w.NAME,\n    A.NAME,\n    o.NAME,\n    l.NAME\n  ) AS \"物品\",\n  COALESCE (P.Amount, 0) + COALESCE (C.Amount, 0) + COALESCE (e.Amount, 0) + COALESCE (w.Amount, 0) + COALESCE (A.Amount, 0) + COALESCE (o.Amount, 0) + COALESCE (l.Amount, 0) AS \"数量\"\nFROM\n  factorypro\n  P FULL OUTER JOIN factorycons C USING (NAME)\n  FULL OUTER JOIN extractor e USING (NAME)\n  FULL OUTER JOIN worldInv w USING (NAME)\n  FULL OUTER JOIN playInv A USING (NAME)\n  FULL OUTER JOIN CurrentPotential o USING (NAME)\n  FULL OUTER JOIN cloInv l USING (NAME)\nWHERE\n  COALESCE (\n    P.NAME,\n    C.NAME,\n    e.NAME,\n    w.NAME,\n    A.NAME,\n    o.NAME,\n    l.NAME\n  ) = SOME (ARRAY [$item]:: TEXT [])\nORDER BY\n  \"数量\" ASC",
          "refId": "A",
          "sql": {
            "columns": [
              {
                "parameters": [],
                "type": "function"
              }
            ],
            "groupBy": [
              {
                "property": {
                  "type": "string"
                },
                "type": "groupBy"
              }
            ],
            "limit": 50
          }
        }
      ],
      "title": "总库存",
      "type": "table"
    }
  ],
  "preload": false,
  "refresh": "10s",
  "schemaVersion": 41,
  "tags": [],
  "templating": {
    "list": [
      {
        "current": {
          "text": "http://host.docker.internal:8080",
          "value": "http://host.docker.internal:8080"
        },
        "datasource": {
          "type": "prometheus",
          "uid": "PBFA97CFB590B2093"
        },
        "definition": "label_values(url)",
        "includeAll": false,
        "label": "服务器",
        "name": "server",
        "options": [],
        "query": {
          "qryType": 1,
          "query": "label_values(url)",
          "refId": "PrometheusVariableQueryEditor-VariableQuery"
        },
        "refresh": 1,
        "regex": "",
        "type": "query"
      },
      {
        "current": {
          "text": "TvT",
          "value": "TvT"
        },
        "datasource": {
          "type": "prometheus",
          "uid": "PBFA97CFB590B2093"
        },
        "definition": "label_values({url=\"$server\"},session_name)",
        "includeAll": false,
        "label": "会话",
        "name": "session",
        "options": [],
        "query": {
          "qryType": 1,
          "query": "label_values({url=\"$server\"},session_name)",
          "refId": "PrometheusVariableQueryEditor-VariableQuery"
        },
        "refresh": 1,
        "regex": "",
        "type": "query"
      },
      {
        "current": {
          "text": [
            "All"
          ],
          "value": [
            "$__all"
          ]
        },
        "datasource": {
          "type": "postgres",
          "uid": "GhzMNppVk"
        },
        "definition": "select \ndata ->> 'Name' as name\nfrom cache where metric = 'worldInv'\nand url = '$server'\nand session_name = '$session';",
        "description": "物品过滤器",
        "includeAll": true,
        "label": "物品",
        "multi": true,
        "name": "item",
        "options": [],
        "query": "select \ndata ->> 'Name' as name\nfrom cache where metric = 'worldInv'\nand url = '$server'\nand session_name = '$session';",
        "refresh": 1,
        "regex": "",
        "type": "query"
      }
    ]
  },
  "time": {
    "from": "now-5m",
    "to": "now"
  },
  "timepicker": {},
  "timezone": "",
  "title": "总库存",
  "uid": "rMkN1op4z",
  "version": 9
}